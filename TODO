-------------------------------------------------------------------------------
$Id: TODO,v 1.11 1993/12/20 07:28:54 gray Exp $
-------------------------------------------------------------------------------

CHECKING:

- check in heap_check the cleared space above each allocation instead of
	only the fence posts
- maybe add another debug level which stores crc information about internal
	heap structures and verifies it during run time.  slow, slow!!
- think of ways we can reorganize the heap and move allocations around
	since problems sometimes pop-up with different heap organizations:

	- pick a random slot from the free-list not just the first entry
	- add new list of dblocks in reverse order to the free-lists or
		randomly disperse
	- maybe when allocating for a block of X bits, get 2 blocks or
		some allocation factor
	- maybe some sort of compact heap orientation like ndt organization.
	- maybe generate some magical value which corresponds to the
		orientation becasue you want to be able to reproduce
		the error (bsd random?)

-------------------------------------------------------------------------------

GENERAL:

- maybe some sort of cheap crc on memory in non-freed memory sections so
	you can see what portions of memory changed (check tripwire)
- maybe provide support for reference counts on allocations:
	- have a call which along with malloc/realloc, increments the
		reference count of the node (maybe duplicate_pointer)
	- free will decrement the reference count and free if 0
	- have a call which reports on the reference count of the node
	- may need additional admin space
	- debug token?
- maybe have bit in allocation struct somewhere that it is a string and
	maybe have a checking level/value that runs though the strings
	and makes sure they have a NULL in them.
	- token 'check-string' or something
	- should only happen if alloc-blank used
	- could be dangerous if folks are changing 'type' of allocation
		from string to ...
- write perl script to summarize the memory usage per file.
- for fence underflow, print out the pointer below and for fence
	overflow the allocation above if possible
- handle memalign, valloc, maybe some form of mallopt
	- maybe mallopt could be mapped into malloc_debug()
- manage dblock_admin entries better:
	- map out usage and get some stats
	- add to normal db_free lists, zero out each of the entries.
		if they are both zero or some magic X then we need to
		get more bblock space for the dblocks.
- turn realloc into an intelligent beasty that looks on either side
	of existing chunk (if expanding) for free space and manages
	free-lists appropriately

-------------------------------------------------------------------------------

TESTING / STATISTICS:

- maybe use the new gnu testing code
- general tons of small blocks and watch for dblock_admin entry leak
	like with large ndb_shell scripts
- add statistics whenever it frees memory to see the viability of
	combining adjacent blocks
- maybe a program that would try a standard set of tests on a number of
	different combinations of debug-values to look for dependancies.

-------------------------------------------------------------------------------
