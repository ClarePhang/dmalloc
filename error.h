/*
 * defines for the error and message code.
 *
 * Copyright 1995 by Gray Watson
 *
 * This file is part of the dmalloc package.
 *
 * Permission to use, copy, modify, and distribute this software for
 * any purpose and without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies, and that the name of Gray Watson not be used in advertising
 * or publicity pertaining to distribution of the document or software
 * without specific, written prior permission.
 *
 * Gray Watson makes no representations about the suitability of the
 * software described herein for any purpose.  It is provided "as is"
 * without express or implied warranty.
 *
 * The author may be contacted at gray.watson@letters.com
 *
 * $Id: error.h,v 1.20 1995/05/05 15:41:54 gray Exp $
 */

#ifndef __ERROR_H__
#define __ERROR_H__

#include <stdarg.h>				/* for ... */
#include "dmalloc_loc.h"			/* for IMPORT */

/*<<<<<<<<<<  The below prototypes are auto-generated by fillproto */

/* global debug flags that are set my DMALLOC_DEBUG environ variable */
IMPORT	long		_dmalloc_flags;

/* global iteration counter for activities */
IMPORT	unsigned long	_dmalloc_iterc;

/* time the library started up for elapsed time calculations */
IMPORT	long		_dmalloc_start;

/*
 * message writer with printf like arguments
 */
IMPORT	void	_dmalloc_message(const char * format, ...);

/*
 * kill the program because of an internal malloc error
 */
IMPORT	void	_dmalloc_die(void);

/*
 * handler of error codes from procedure FUNC.  the procedure should
 * have set the errno already.
 */
IMPORT	void	dmalloc_error(const char * func);

/*<<<<<<<<<<   This is end of the auto-generated output from fillproto. */

#endif /* ! __ERROR_H__ */
