-------------------------------------------------------------------------------

See the INSTALL file for installation notes.

-------------------------------------------------------------------------------

DOCUMENTATION:

Examine the dmalloc.info file.  Is is a gnu-info file having the
user-documentation for the dmalloc subsystem.  It can be installed in
the emacs info directory and read with emacs/info or the info program
available from the texinfo package at GNU archive sites.  It is also
suitable for reading as text.

It can be reproduced from the dmalloc.texi texinfo file which also can
generate TeX hardcopy output with the help of the texinfo.tex file.

A dmalloc.ps postscript file may also have been included for you
TeX-less folks.

-------------------------------------------------------------------------------

GENERAL:

- the system is pretty dependent on a good ansi-c compiler like gcc.
	Non-ansi folks might have to:

	- add some sort of ansi option to your compiler.  if there
		is one let me know and I will add it to the configure
		script.
	- try 'make noansi' (WARNING: this modifies the source code in
		place) which will try and run the Deansify.pl perl
		script.  It takes care of:
		- changing stdarg.h and ... to varargs.h and va_alist
		- changing all (void *) references to (char *).
		- fixing all functions to remove foo(char * var) decls.
	- if it doesn't work you may have to do Deansify.pl's job by hand.

- the file Manifest contains a list of each of the files and what it does.

- configure can be regenerated by the autoconf script (versions 1.6 and above)

- this library has never been (and maybe never will be) optimized for
	space nor speed.  it is *very* wasteful and while handling
	large allocations or tons of concurrent small allocations, the
	heap can quickly become huge.

-------------------------------------------------------------------------------

ARGV LIBRARY:

My argv library which should have been included with this package
(argv.[ch], argv_loc.h).  I use it with all my binaries.

It functions similar to the getopt routines in that it provides a
standardized way of processing arguments.  However, that is where the
similarity ends.  You have to write no C code to do the actual
processing, it handles short -l and long --logfile style options,
gives standard short and long usage messages, and many other features
while trying to comply with POSIX specs.

For copies of the library, ftp to ftp.antaire.com in the
/antaire/src/argv directory.

-------------------------------------------------------------------------------

THANKS:

Many net folk contributed to the library and my thanks goes out to
them all.

However, special thanks must go to my core contributors/testers: Scott
Michel, Greg Sylvain, Bali Jatinder, Marc Evans, Dave Hill, Manfred
Hauswirth, Richard Birnbaum, Francois Pinard, Irv Lustig, and Marty
Leisner.

-------------------------------------------------------------------------------

AUTHOR:

If you have any questions, comments, or problems feel free to send me
mail.

gray.watson@antaire.com

-------------------------------------------------------------------------------
$Id: README.1,v 1.47 1994/11/12 23:37:12 gray Exp $
-------------------------------------------------------------------------------
